"""
Реализуйте функцию range_sum() с использованием рекурсии, которая принимает три аргумента в следующем порядке:

    numbers — список целых чисел
    start — целое неотрицательное число
     — целое неотрицательное число

Функция должна суммировать все числа из списка numbers от numbers[start] до numbers[end] включительно и
    возвращать полученный результат.

Примечание 1. Рассмотрим первый тест. Диапазону индексов [3;7] в переданном списке принадлежат числа ​​4,5,6,7,8​,
    сумма которых равна:
    4+5+6+7+8=30

Примечание 2. Гарантируется, что start <= end.
"""


def range_sum(numbers, start, end):
    numbers = numbers[start:end + 1]

    def rec():
        n = numbers.pop(0) if numbers else 0
        if n:
            return rec() + n
        return 0
    return rec()


# INPUT DATA:

# TEST_1:
print(range_sum([1, 2, 3, 4, 5, 6, 7, 8, 9], 3, 7))

# TEST_2:
print(range_sum([1, 2, 3, 4, 5, 6, 7, 8, 9], 0, 8))

# TEST_3:
print(range_sum([1, 2, 3, 4, 5, 6, 7, 8, 9], 0, 0))

# TEST_4:
print(range_sum([21, 2342, 34, 47, 5, 65, 47, 855, 9, 123, 42, 5, 6, 765, 34, 3, 32], 0, 1))

# TEST_5:
print(range_sum([21, 2342, 34, 47, 5, 65, 47, 855, 9, 123, 42, 5, 6, 765, 34, 3, 32], 6, 9))

# TEST_6:
print(range_sum([21, 23421, 324, 347, 25, 65, 47, 85125, 9, 123, 42, 5, 6, 765, 34, 3, 32, 13, 25365547, 22, 12], 1, 11))

# TEST_7:
print(range_sum([21, 23421, 324, 347, 25, 65, 47, 85125, 9, 123, 42, 5, 6, 765, 34, 3, 32, 13, 25365547, 22, 12], 5, 5))

# TEST_8:
print(range_sum([21, 23421, 324, 347, 25, 65, 47, 85125, 9, 123, 42, 5, 6, 765, 34, 3, 32, 13, 25365547, 22, 12], 0, 20))

# TEST_9:
print(range_sum([21, 23421, 324, 347, 25, 65, 47, 85125, 9, 123, 42, 5, 6, 765, 34, 3, 32, 13, 25365547, 22, 12], 20, 20))

# TEST_10:
print(range_sum([21, 23421, 324, 347, 25, 65, 47, 85125, 9, 123, 42, 5, 6, 765, 34, 3, 32, 13, 25365547, 22, 12], 0, 0))

# TEST_11:
print(range_sum([21, 23421, 324, 347, 25, 65, 47, 85125, 9, 123, 42, 5, 6, 765, 34, 3, 32, 13, 25365547, 22, 12], 3, 16))
