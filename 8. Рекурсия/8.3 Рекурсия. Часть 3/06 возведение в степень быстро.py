"""
Возводить в степень можно гораздо быстрее, чем за n умножений.
    Для этого нужно воспользоваться следующими рекуррентными соотношениями:

    an=(a2)n2, при  четном  n
    an=(a2)2n​, причетном n

Реализуйте функцию get_fast_pow() с использованием рекурсии, которая принимает два аргумента в следующем порядке:

    a — положительное целое число
    n — неотрицательное целое число

Функция должна вычислять значение a в степени n, используя алгоритм быстрого возведения в степень,
    и возвращать полученный результат.

Примечание 1. При решении не используйте оператор возведения в степень **.
"""


def get_fast_pow(a, n):
    if n:
        if n % 2 == 0:
            return get_fast_pow(a * a, n // 2)
        else:
            return a * get_fast_pow(a, n - 1)
    return 1


# INPUT DATA:

# TEST_1:
print(get_fast_pow(2, 10))

# TEST_2:
print(get_fast_pow(5, 2))

# TEST_3:
print(get_fast_pow(2, 100))

# TEST_4:
print(get_fast_pow(2, 1000))

# TEST_5:
print(get_fast_pow(11, 199))

# TEST_6:
print(get_fast_pow(99, 99))

# TEST_7:
print(get_fast_pow(10, 10000))

# TEST_8:
print(get_fast_pow(69, 0))
